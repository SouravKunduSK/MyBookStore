@model MyBookStore.Models.Book

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Breadcrumbs-->

    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="#">All Books</a>
        </li>
        @*<li class="breadcrumb-item ">All Authors</li>*@
        <li class="breadcrumb-item active">Edit Book Details</li>


    </ol>
    <!-- DataTables Example -->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-book-open"></i>
            Edit Book Details

        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(m => m.BookId)
                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.BorrowerName)
                @Html.HiddenFor(m => m.BorrowDate)

                <h3 style="color:red;">@TempData["msg"]</h3>

                <div class="col-md-6">



                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <div class="row">
                                <div class="col-6">
                                    <h5>Book's Current Image</h5>
                                    <img src="@Url.Content(Model.Photo)" style="height:200px" width="150">
                                </div>
                                <div class="col-6">
                                    <h5>Book's New Image:</h5>
                                    <img src="" id="output" style="height:200px" width="150" altsrc="No Image" />
                                </div>
                                <div class="col-10">
                                    <h5>Choose New Image</h5>
                                    <input type="file" name="Image" onchange="document.
        getElementById('output').src = window.URL.createObjectURL(this.files[0])" />
                                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>
                </div>








                <div class="col-md-6">
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <h6>Book Name</h6>
                            @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="col-md-6">
                    <div class="form-group">
                        @if (ViewBag.AuthorList != null)
                        {
                            <div class="col-md-10">
                                <h6>Select Author</h6>
                                @Html.DropDownListFor(model => model.AuthorId, ViewBag.AuthorList as SelectList, "-- Select Author ---", new { @class = "form-control", @id = "aid" })
                            </div>
                        }
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @if (ViewBag.CategoryList != null)
                        {
                            <div class="col-md-10">
                                <h6>Select Category</h6>
                                @Html.DropDownListFor(model => model.CategoryId, ViewBag.CategoryList as SelectList, "-- Select Category ---", new { @class = "form-control", @id = "cid" })
                            </div>
                        }
                    </div>
                </div>



                <div class="col-md-6">
                    <div class="form-group">
                        @if (ViewBag.ReadList != null)
                        {
                            <div class="col-md-10">
                                <h6>Reading Status</h6>
                                @Html.DropDownListFor(model => model.ReadingId, ViewBag.ReadList as SelectList, "-- Select Reading Status ---", new { @class = "form-control", @id = "rsid" })
                            </div>
                        }
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @if (ViewBag.SatList != null)
                        {
                            <div class="col-md-10">
                                <h6>Book Status</h6>
                                @Html.DropDownListFor(model => model.BookStatusId, ViewBag.SatList as SelectList, "-- Select Book Status ---", new { @class = "form-control",@id="sid" })
                            </div>
                        }
                    </div>
                </div>


                <div class="col-md-6">
                        <div class="form-group">

                            <div class="col-md-10">
                                <h6>Buying Date</h6>

                                <input class="form-control" asp-for="BuyingDate" type="date" name="BuyingDate" />
                                @Html.ValidationMessageFor(model => model.BuyingDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                @*<div class="col-md-6">
                    <div class="form-group">

                        <div class="col-md-10">
                            <h6>Buying Date</h6>
                            @Html.EditorFor(model => model.BuyingDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BuyingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

                <div class="col-md-6">
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">

                            <a onclick="window.history.back();" class="btn btn-outline-danger">Cancel</a>
                            <input type="submit" class="btn btn-outline-primary" value="Update" />
                        </div>
                    </div>
                </div>


            }
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                /*yearRange: "-10:+10",*/

                minDate: new Date(2020, 00, 01)
            });
        });
    </script>

    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#aid").chosen({
                disable_search_threshold: 5
            });
            $("#cid").chosen({
                disable_search_threshold: 5
            });
            $("#sid").chosen({
                disable_search_threshold: 5
            });
            $("#rsid").chosen({
                disable_search_threshold: 5
            });
        });
    </script>

}